{"version":3,"sources":["svg sync /^/.*/.svg$","svg/clear-day.svg","svg/clear-night.svg","svg/cloudy.svg","svg/fog.svg","svg/partly-cloudy-day.svg","svg/partly-cloudy-night.svg","svg/rain.svg","svg/sleet.svg","svg/snow.svg","svg/wind.svg","components/Search.js","components/Results.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useStyles","makeStyles","theme","root","padding","alignItems","width","marginTop","display","input","marginLeft","spacing","flex","iconButton","Search","props","classes","Paper","className","InputBase","placeholder","onChange","city","value","cityValue","onKeyPress","charCode","showResult","IconButton","onClick","defaultCity","Button","color","endIcon","card","height","image","container","verticalAlign","margin","Results","currently","result","img","icon","path","require","Card","CardActionArea","src","alt","CardContent","Typography","component","temperature","summary","visibility","toFixed","humidity","App","state","Axios","get","then","res","data","results","length","lat","locations","latLng","lon","lng","setState","catch","error","console","log","updateSearchedCity","target","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2aaf2539.chunk.js","sourcesContent":["var map = {\n\t\"./clear-day.svg\": 56,\n\t\"./clear-night.svg\": 57,\n\t\"./cloudy.svg\": 58,\n\t\"./fog.svg\": 59,\n\t\"./partly-cloudy-day.svg\": 60,\n\t\"./partly-cloudy-night.svg\": 61,\n\t\"./rain.svg\": 62,\n\t\"./sleet.svg\": 63,\n\t\"./snow.svg\": 64,\n\t\"./wind.svg\": 65\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 55;","module.exports = __webpack_public_path__ + \"static/media/clear-day.4b9869a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.f86c33c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.2d0410c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.c356784f.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.3237f7da.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.abda2f64.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.e13be320.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.8291f353.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.1a2bbf7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.56e49cd3.svg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Search = props => {\r\n  const classes = useStyles();\r\n  const checkEnterTriggered = e => {\r\n    if (e.charCode === 13) {\r\n      props.showResult();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Enter your city\"\r\n          onChange={props.city}\r\n          value={props.cityValue}\r\n          onKeyPress={checkEnterTriggered}\r\n        />\r\n        {props.cityValue ? (\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            onClick={props.defaultCity}\r\n          >\r\n            <ClearIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </Paper>\r\n      <Button\r\n        onClick={props.showResult}\r\n        color=\"primary\"\r\n        endIcon={<SearchIcon>Serach</SearchIcon>}\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n    marginTop: 15,\r\n    display: \"inline-flex\"\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  }\r\n}));\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nconst Results = props => {\r\n  const classes = useStyles();\r\n  const currently = props.result.currently;\r\n  const img = currently.icon;\r\n  const path = require(`../svg/${img}.svg`);\r\n  return (\r\n    <div className={classes.container}>\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          <img className={classes.image} src={path} alt={img} />\r\n          <CardContent>\r\n            <Typography component=\"p\">City: {props.city}</Typography>\r\n            <Typography component=\"p\">\r\n              Temparature: {currently.temperature}Â°C\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              Status: {currently.summary}\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              Visibility: {currently.visibility.toFixed(2)}KM\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              Humidity: {(currently.humidity * 100).toFixed(2)}%\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 500,\r\n    height: 315\r\n  },\r\n  image: {\r\n    height: 160\r\n  },\r\n  container: {\r\n    display: \"inline-block\",\r\n    verticalAlign: \"middle\",\r\n    marginTop: 20,\r\n    margin: \"0 auto\"\r\n  }\r\n});\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\nimport Search from \"./components/Search\";\nimport Results from \"./components/Results\";\nimport \"./App.css\";\nimport Axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      result: {}\n    };\n  }\n  showResult = e => {\n    if (this.state.city) {\n      Axios.get(\n        `https://www.mapquestapi.com/geocoding/v1/address?key=vf2R1VpfowlzmDyJQy8yAP0YOV2dMH5j&location=${this.state.city}`\n      )\n        .then(res => {\n          if (res.data.results.length) {\n            const lat = res.data.results[0].locations[0].latLng.lat;\n            const lon = res.data.results[0].locations[0].latLng.lng;\n\n            // Proxy to by-pass CORS restrictions\n            const proxy = \"https://cors-anywhere.herokuapp.com/\";\n            // https://api.darksky.net/forecast/key/latitude,longitude\n            Axios.get(\n              proxy +\n                `https://api.darksky.net/forecast/38946ee167f20884649270c4d1eaf870/${lat},${lon}?units=si`\n            )\n              .then(res => this.setState({ result: res.data }))\n              .catch(error => console.log(error));\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n  updateSearchedCity = e => {\n    this.setState({\n      city: e.target.value\n    });\n  };\n  defaultCity = () => {\n    this.setState({\n      city: \"\",\n      result: {}\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Search\n          city={this.updateSearchedCity}\n          cityValue={this.state.city}\n          defaultCity={this.defaultCity}\n          showResult={this.showResult}\n        />\n        {Object.keys(this.state.result).length ? (\n          <Results result={this.state.result} city={this.state.city} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}